package {{ .Package }}

import (
    "github.com/GabrielCarpr/cqrs/bus"
    "github.com/GabrielCarpr/cqrs/bus/message"
    "context"
)

/** COMMAND */

type {{ .Struct }} struct {
    bus.CommandType

}

func (c {{ .Struct }}) Command() string {
    return "{{ .Struct }}"
}

func (c {{ .Struct }}) Valid() error {
    return nil
}

func (c {{ .Struct }}) Auth(ctx context.Context) [][]string {
    return [][]string{}
}


/** HANDLER */

var _ = (*{{ .Struct }}Handler)(nil)

func New{{ .Struct }}Handler() *{{ .Struct }}Handler {
    return &{{ .Struct }}Handler{}
}

type {{ .Struct }}Handler struct {

}

func (h *{{ .Struct }}Handler) Execute(c bus.Command) (res bus.CommandResponse, msgs []message.Message) {
    _= c.({{ .Struct }})

    return
}
