package {{ .Package }}

import (
    "github.com/GabrielCarpr/cqrs/bus"
    "context"
)

/** QUERY */

type {{ .Struct }} struct {
    bus.QueryType
}

func ({{ .Struct }}) Query() string {
    return "{{ .Struct }}"
}

func (q {{ .Struct }}) Valid() error {
    return nil
}

func (q {{ .Struct }}) Auth(ctx context.Context) [][]string {
    return [][]string{}
}


/** HANDLER */

func New{{ .Struct }}Handler() *{{ .Struct }}Handler {
    return &{{ .Struct }}Handler{}
}

var _ = (*{{ .Struct }}Handler)(nil)

type {{ .Struct }}Handler struct {

}

func (h {{ .Struct }}Handler) Execute(ctx context.Context, q bus.Query, r interface{}) error {
    _= q.({{ .Struct }})

    return nil
}